// Generated from src/Hrlang.g4 by ANTLR 4.9.3
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u0012u\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0003\u0002\u0003\u0002\u0003\u0002\u0003",
    "\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003",
    "\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003\n\u0003\n\u0003",
    "\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003\u000e\u0003",
    "\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003",
    "\u000e\u0003\u000e\u0005\u000e\\\n\u000e\u0003\u000f\u0003\u000f\u0007",
    "\u000f`\n\u000f\f\u000f\u000e\u000fc\u000b\u000f\u0003\u0010\u0006\u0010",
    "f\n\u0010\r\u0010\u000e\u0010g\u0003\u0010\u0003\u0010\u0006\u0010l",
    "\n\u0010\r\u0010\u000e\u0010m\u0005\u0010p\n\u0010\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0011\u0002\u0002\u0012\u0003\u0003\u0005\u0004",
    "\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015",
    "\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012\u0003",
    "\u0002\b\u0005\u0002,-//11\u0004\u0002>>@@\u0003\u0002c|\u0005\u0002",
    "2;C\\c|\u0003\u00022;\u0005\u0002\u000b\f\u000f\u000f\"\"\u0002|\u0002",
    "\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002",
    "\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002",
    "\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002",
    "\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002",
    "\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002",
    "\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002",
    "\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002",
    "\u001f\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002\u0002\u0003",
    "#\u0003\u0002\u0002\u0002\u0005,\u0003\u0002\u0002\u0002\u00075\u0003",
    "\u0002\u0002\u0002\t:\u0003\u0002\u0002\u0002\u000bB\u0003\u0002\u0002",
    "\u0002\rD\u0003\u0002\u0002\u0002\u000fF\u0003\u0002\u0002\u0002\u0011",
    "H\u0003\u0002\u0002\u0002\u0013J\u0003\u0002\u0002\u0002\u0015L\u0003",
    "\u0002\u0002\u0002\u0017N\u0003\u0002\u0002\u0002\u0019P\u0003\u0002",
    "\u0002\u0002\u001b[\u0003\u0002\u0002\u0002\u001d]\u0003\u0002\u0002",
    "\u0002\u001fe\u0003\u0002\u0002\u0002!q\u0003\u0002\u0002\u0002#$\u0007",
    "r\u0002\u0002$%\u0007t\u0002\u0002%&\u0007q\u0002\u0002&\'\u0007i\u0002",
    "\u0002\'(\u0007t\u0002\u0002()\u0007c\u0002\u0002)*\u0007o\u0002\u0002",
    "*+\u0007c\u0002\u0002+\u0004\u0003\u0002\u0002\u0002,-\u0007h\u0002",
    "\u0002-.\u0007k\u0002\u0002./\u0007o\u0002\u0002/0\u0007r\u0002\u0002",
    "01\u0007t\u0002\u000212\u0007q\u0002\u000223\u0007i\u0002\u000234\u0007",
    "=\u0002\u00024\u0006\u0003\u0002\u0002\u000256\u0007n\u0002\u000267",
    "\u0007g\u0002\u000278\u0007k\u0002\u000289\u0007c\u0002\u00029\b\u0003",
    "\u0002\u0002\u0002:;\u0007g\u0002\u0002;<\u0007u\u0002\u0002<=\u0007",
    "e\u0002\u0002=>\u0007t\u0002\u0002>?\u0007g\u0002\u0002?@\u0007x\u0002",
    "\u0002@A\u0007c\u0002\u0002A\n\u0003\u0002\u0002\u0002BC\u0007*\u0002",
    "\u0002C\f\u0003\u0002\u0002\u0002DE\u0007+\u0002\u0002E\u000e\u0003",
    "\u0002\u0002\u0002FG\u0007=\u0002\u0002G\u0010\u0003\u0002\u0002\u0002",
    "HI\t\u0002\u0002\u0002I\u0012\u0003\u0002\u0002\u0002JK\u0007?\u0002",
    "\u0002K\u0014\u0003\u0002\u0002\u0002LM\u0007.\u0002\u0002M\u0016\u0003",
    "\u0002\u0002\u0002NO\u0007}\u0002\u0002O\u0018\u0003\u0002\u0002\u0002",
    "PQ\u0007\u007f\u0002\u0002Q\u001a\u0003\u0002\u0002\u0002R\\\t\u0003",
    "\u0002\u0002ST\u0007@\u0002\u0002T\\\u0007?\u0002\u0002UV\u0007>\u0002",
    "\u0002V\\\u0007?\u0002\u0002WX\u0007?\u0002\u0002X\\\u0007?\u0002\u0002",
    "YZ\u0007#\u0002\u0002Z\\\u0007?\u0002\u0002[R\u0003\u0002\u0002\u0002",
    "[S\u0003\u0002\u0002\u0002[U\u0003\u0002\u0002\u0002[W\u0003\u0002\u0002",
    "\u0002[Y\u0003\u0002\u0002\u0002\\\u001c\u0003\u0002\u0002\u0002]a\t",
    "\u0004\u0002\u0002^`\t\u0005\u0002\u0002_^\u0003\u0002\u0002\u0002`",
    "c\u0003\u0002\u0002\u0002a_\u0003\u0002\u0002\u0002ab\u0003\u0002\u0002",
    "\u0002b\u001e\u0003\u0002\u0002\u0002ca\u0003\u0002\u0002\u0002df\t",
    "\u0006\u0002\u0002ed\u0003\u0002\u0002\u0002fg\u0003\u0002\u0002\u0002",
    "ge\u0003\u0002\u0002\u0002gh\u0003\u0002\u0002\u0002ho\u0003\u0002\u0002",
    "\u0002ik\u00070\u0002\u0002jl\t\u0006\u0002\u0002kj\u0003\u0002\u0002",
    "\u0002lm\u0003\u0002\u0002\u0002mk\u0003\u0002\u0002\u0002mn\u0003\u0002",
    "\u0002\u0002np\u0003\u0002\u0002\u0002oi\u0003\u0002\u0002\u0002op\u0003",
    "\u0002\u0002\u0002p \u0003\u0002\u0002\u0002qr\t\u0007\u0002\u0002r",
    "s\u0003\u0002\u0002\u0002st\b\u0011\u0002\u0002t\"\u0003\u0002\u0002",
    "\u0002\t\u0002[_agmo\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class HrlangLexer extends antlr4.Lexer {

    static grammarFileName = "Hrlang.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'programa'", "'fimprog;'", "'leia'", "'escreva'", 
                         "'('", "')'", "';'", null, "'='", "','", "'{'", 
                         "'}'" ];
	static symbolicNames = [ null, null, null, null, null, "AP", "FP", "SC", 
                          "OP", "ATTR", "VIR", "ACH", "FCH", "OPREL", "ID", 
                          "NUMBER", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "AP", "FP", "SC", 
                      "OP", "ATTR", "VIR", "ACH", "FCH", "OPREL", "ID", 
                      "NUMBER", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

HrlangLexer.EOF = antlr4.Token.EOF;
HrlangLexer.T__0 = 1;
HrlangLexer.T__1 = 2;
HrlangLexer.T__2 = 3;
HrlangLexer.T__3 = 4;
HrlangLexer.AP = 5;
HrlangLexer.FP = 6;
HrlangLexer.SC = 7;
HrlangLexer.OP = 8;
HrlangLexer.ATTR = 9;
HrlangLexer.VIR = 10;
HrlangLexer.ACH = 11;
HrlangLexer.FCH = 12;
HrlangLexer.OPREL = 13;
HrlangLexer.ID = 14;
HrlangLexer.NUMBER = 15;
HrlangLexer.WS = 16;



